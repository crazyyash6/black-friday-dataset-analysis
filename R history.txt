library(ggplot2)
library(gridExtra)
library(corrplot)
library(rpart)
library(randomForest)
library(stepPlr)
library(C50)
library(plyr)
library(MASS)
library(caret)
library(caretEnsemble)
library(dplyr)
library(data.table)
library(ggplot2)
library(gridExtra)
library(corrplot)
library(rpart)
library(randomForest)
library(stepPlr)
library(C50)
library(plyr)
library(MASS)
library(caret)
library(caretEnsemble)
library(dplyr)
train_set <- read.csv("train.csv", stringsAsFactors = FALSE, header = TRUE, na.strings = c('NA',''))
test_set<- read.csv("test.csv",  stringsAsFactors = FALSE, header = TRUE, na.strings = c('NA',''))
memory.limit()
Sys.info()
str(train_set)
sapply(train_set, function(x) sum(is.na(x)))
str(test_set)
sapply(test_set, function(x) sum(is.na(x)))
train_set$User_ID <- as.factor(train_set$User_ID)
train_set$Product_ID <- as.factor(train_set$Product_ID)
train_set$Marital_Status <- as.factor(ifelse(train_set$Marital_Status == 1, 'Married', 'Single'))
train_set$Age <- as.factor(train_set$Age)
train_set$Gender <- as.factor(ifelse(train_set$Gender=='M', 'Male', 'Female'))
train_set$Occupation <- as.factor(train_set$Occupation)
train_set$City_Category <- as.factor(train_set$City_Category)
train_set$Stay_In_Current_City_Years <- as.factor(train_set$Stay_In_Current_City_Years)
test_set$User_ID <- as.factor(test_set$User_ID)
test_set$Product_ID <- as.factor(test_set$Product_ID)
test_set$Marital_Status <- as.factor(ifelse(test_set$Marital_Status == 1, 'Married', 'Single'))
test_set$Age <- as.factor(test_set$Age)
test_set$Gender <- as.factor(ifelse(test_set$Gender=='M', 'Male', 'Female'))
test_set$Occupation <- as.factor(test_set$Occupation)
test_set$City_Category <- as.factor(test_set$City_Category)
test_set$Stay_In_Current_City_Years <- as.factor(test_set$Stay_In_Current_City_Years)
EDA_Distinct <- distinct(train_set, User_ID, Age, Gender, Marital_Status, Occupation, City_Category, Stay_In_Current_City_Years)
head(EDA_Distinct)
head(train_set$User_ID,40)
head(test_set$User_ID,40)
userIDCount <- as.data.frame(table(train_set$User_ID))
names(userIDCount) <- c("User_ID","User_Purchase_Count")
head(userIDCount)
train_set <- merge(x = train_set, y = userIDCount, by = "User_ID", all.x = TRUE)
str(train_set)
test_set <- merge(x = test_set, y = userIDCount, by = "User_ID", all.x = TRUE)
rm(userIDCount)
'%!in%' <- function(x,y)!('%in%'(x,y))
test_set[is.na(test_set$User_Purchase_Count), "User_Purchase_Count"] <- 1
class(test_set$User_Purchase_Count)
str(test_set)
test_set$User_Purchase_Count <- as.integer(test_set$User_Purchase_Count)
totspend <- aggregate(train_set$Purchase, by=list(Category=train_set$User_ID), FUN=sum)
names(totspend) <- c("User_ID","Total_Spending")
head(totspend)
summary(totspend$Total_Spending)
ggplot(totspend, aes(x=Total_Spending)) + geom_density(fill="red", col="black", alpha=0.80)
rm(totspend)
EDA_Distinct <- distinct(train_set, User_ID, Age, Gender, Marital_Status, Occupation, City_Category, Stay_In_Current_City_Years, User_Purchase_Count)
d1 <- summary(EDA_Distinct$User_Purchase_Count)
p1 <- ggplot(EDA_Distinct, aes(x=User_Purchase_Count)) + geom_density(fill="red", col="black", alpha=0.80) + annotate(geom = "text", x = 6, y = 0.0125, label = "Min")  + annotate(geom = "text", x = 24, y = 0.013, label = "1st Qu.") + annotate(geom = "text", x = 50, y = 0.0125, label = "Median") + annotate(geom = "text", x = 90, y = 0.013, label = "Mean") + annotate(geom = "text", x = 112, y = 0.0125, label = "3rd Qu.") + annotate(geom = "text", x = 1015, y = 0.0125, label = "Max") + geom_vline(xintercept = c(6, 26, 54, 93.37, 117, 1026), size = 0.2, col = 'black') #+ lims(x = )
p2 <- ggplot(EDA_Distinct, aes(x=User_Purchase_Count)) +geom_histogram(fill="red", col="black", alpha=0.80)
p3 <- ggplot(EDA_Distinct,aes(x= Age,y=User_Purchase_Count, fill=Age)) + geom_boxplot() + facet_grid(Gender~Marital_Status) + labs(x="Age",y="Customer Purchase Count")
p4 <- ggplot(EDA_Distinct,aes(x= Occupation,y=User_Purchase_Count, fill=Occupation)) + geom_boxplot() + facet_grid(Gender~Marital_Status) + labs(x="Occupation",y="Customer Purchase Count")
p5 <- ggplot(EDA_Distinct,aes(x=Age,y=User_Purchase_Count,fill=Stay_In_Current_City_Years))+geom_boxplot()+facet_grid(City_Category~ Stay_In_Current_City_Years) + labs(x="Age",y="Customer Purchase Count")
p5i <- ggplot(EDA_Distinct,aes(x=Age,y=User_Purchase_Count,fill=Stay_In_Current_City_Years))+geom_boxplot()+facet_grid( Stay_In_Current_City_Years ~ City_Category) + labs(x="Age",y="Customer Purchase Count")
p6 <- ggplot(EDA_Distinct,aes(x=Age,y=User_Purchase_Count,fill=Marital_Status))+geom_boxplot()+facet_grid(Gender~City_Category) + scale_fill_manual(values=c("tan4","limegreen"))  + labs(x="Age",y="Customer Purchase Count")
d1;p1;p2;p3;p4;p5;p5i;p6
head(train_set$Product_ID,15)
SoldProdCount <- as.data.frame(table(train_set$Product_ID))
names(SoldProdCount) <- c("Product_ID","Product_Sold_Count")
SoldProdPriceMean <- aggregate(train_set$Purchase, by=list(Category=train_set$Product_ID), FUN=mean)
names(SoldProdPriceMean) <- c("Product_ID","Product_Mean_Price")
SoldProdPriceSD <- aggregate(train_set$Purchase, by=list(Category=train_set$Product_ID), FUN=sd)
names(SoldProdPriceSD) <- c("Product_ID","Product_SD_Price")
str(SoldProdCount); str(SoldProdPriceMean); str(SoldProdPriceSD)
ProductData <- as.data.frame(train_set$Product_ID)
colnames(ProductData) <- c("Product_ID")
# joining i.e. storing the Product sold count in original data frame
ProductData <- merge(x = ProductData, y = SoldProdCount, by = "Product_ID", all.x = TRUE)
ProductData <- merge(x = ProductData, y = SoldProdPriceMean, by = "Product_ID", all.x = TRUE)
ProductData <- merge(x = ProductData, y = SoldProdPriceSD, by = "Product_ID", all.x = TRUE)
ProductData$Product_Sold_Count <- as.integer(ProductData$Product_Sold_Count)
ProductData$Product_Mean_Price <- as.integer(ProductData$Product_Mean_Price)
ProductData$Product_SD_Price <- as.integer(ProductData$Product_SD_Price)
str(ProductData)
train_set <- merge(x = train_set, y = SoldProdCount, by = "Product_ID", all.x = TRUE)
d2 <- summary(ProductData$Product_Sold_Count)
p7 <- ggplot(ProductData, aes(x=Product_Sold_Count)) +geom_density(fill="red", col="black", alpha=0.80) + annotate(geom = "text", x = 1, y = 0.0017, label = "Min")  + annotate(geom = "text", x = 174, y = 0.0017, label = "1st Qu.") + annotate(geom = "text", x = 357, y = 0.0017, label = "Median") + annotate(geom = "text", x = 450, y = 0.0017, label = "Mean") + annotate(geom = "text", x = 620, y = 0.0017, label = "3rd Qu.") + annotate(geom = "text", x = 1880, y = 0.0017, label = "Max") + geom_vline(xintercept = c(1,174,357,450.5,620,1880), size = 0.2, col = 'black')
d2e <- summary(ProductData$Product_Mean_Price)
p7e <- ggplot(ProductData, aes(x=Product_Mean_Price)) +geom_density(fill="red", col="black", alpha=0.80) + annotate(geom = "text", x = 30, y = 0.0017, label = "Min")  + annotate(geom = "text", x = 6340, y = 0.0017, label = "1st Qu.") + annotate(geom = "text", x = 7750, y = 0.0017, label = "Median") + annotate(geom = "text", x = 9245, y = 0.0017, label = "Mean") + annotate(geom = "text", x = 12950, y = 0.0017, label = "3rd Qu.") + annotate(geom = "text", x = 21240, y = 0.0017, label = "Max") + geom_vline(xintercept = c(36, 6372, 7785, 9263, 12970, 21260), size = 0.2, col = 'black')
d2ee <- summary(ProductData$Product_SD_Price)
p7ee <- ggplot(ProductData, aes(x=Product_SD_Price)) +geom_density(fill="red", col="black", alpha=0.80) + annotate(geom = "text", x = 5, y = 0.00105, label = "Min")  + annotate(geom = "text", x = 1620, y = 0.00105, label = "1st Qu.") + annotate(geom = "text", x = 1968, y = 0.00105, label = "Median") + annotate(geom = "text", x = 2410, y = 0.00105, label = "Mean") + annotate(geom = "text", x = 3450, y = 0.00105, label = "3rd Qu.") + annotate(geom = "text", x = 8950, y = 0.00105, label = "Max") + geom_vline(xintercept = c(11, 1642, 1978, 2433, 3470, 8970), size = 0.2, col = 'black')
d2;p7; d2e; p7e;d2ee; p7ee
head(ProductData[order(-ProductData$Product_Sold_Count),])
tail(ProductData[order(-ProductData$Product_Sold_Count),])
test_set <- merge(x = test_set, y = SoldProdCount, by = "Product_ID", all.x = TRUE)
rm(SoldProdCount, SoldProdPriceMean, SoldProdPriceSD, ProductData)
test_set[is.na(test_set$Product_Sold_Count), "Product_Sold_Count"] <- 0
test_set$Product_Sold_Count <- as.integer(test_set$Product_Sold_Count)
head(train_set$Gender); head(train_set$Marital_Status)
d3 <- table(EDA_Distinct$Gender, EDA_Distinct$Marital_Status)
p8 <- ggplot(EDA_Distinct, aes(x=Gender, fill= Marital_Status)) + geom_bar(position = "dodge") + ggtitle("") +  labs(x="Gender",y="No. of distinct Sales") + annotate(geom = "text", x = 0.775, y = 619, label = "719")   + annotate(geom = "text", x = 1.225, y = 847, label = "947") + annotate(geom = "text", x = 1.775, y = 1655, label = "1755") + annotate(geom = "text", x = 2.225, y = 2370, label = "2470") + scale_fill_manual(values=c("tan4","limegreen"))
d3; p8
head(train_set, 10)
d4 <- table(EDA_Distinct$Age)
p9 <- ggplot(EDA_Distinct, aes(x=Age)) + geom_bar(fill=rainbow(7), col="black") + ggtitle("") +  labs(x="Age Group",y="No. of distinct buyer") + annotate(geom = "text", x = 1, y = 168, label = "218") + annotate(geom = "text", x = 2, y = 1019, label = "1069") + annotate(geom = "text", x = 3, y = 2000, label = "2053") + annotate(geom = "text", x = 4, y = 1117, label = "1167") + annotate(geom = "text", x = 5, y = 481, label = "531") + annotate(geom = "text", x = 6, y = 431, label = "481") + annotate(geom = "text", x = 7, y = 322, label = "372")
d5 <- table(EDA_Distinct$Marital_Status, EDA_Distinct$Gender, EDA_Distinct$Age)
p10 <- ggplot(EDA_Distinct, aes(x= Age,fill= Gender, col= Marital_Status)) + geom_bar(position = "dodge", size=1.25) +  labs(x="Age Group",y="No. of distinct buyer") + scale_fill_manual(values=c("hotpink", "royalblue")) + scale_color_manual(values=c("tan4","limegreen")) + ggtitle("")
p11 <- ggplot(EDA_Distinct,aes(x=Age,fill=Marital_Status))+geom_bar(position = "dodge")+facet_grid(Gender~.) + scale_fill_manual(values=c("tan4","limegreen"))
d4; p9; d5; p10; p11
head(train_set$Occupation, 10)
d6 <- table(EDA_Distinct$Occupation)
d7 <- table(EDA_Distinct$Gender, EDA_Distinct$Occupation)
p12 <- ggplot(EDA_Distinct, aes(x=Occupation, fill=Gender)) + geom_bar( col="black") + ggtitle("") +  labs(x="Occupation",y="No. of distinct people") + scale_fill_manual(values=c("hotpink", "royalblue"))
d8 <- table(EDA_Distinct$Marital_Status, EDA_Distinct$Occupation)
p13 <- ggplot(EDA_Distinct, aes(x=Occupation, fill=Marital_Status)) + geom_bar( col="black") + ggtitle("") +  labs(x="Occupation",y="No. of distinct people") + scale_fill_manual(values=c("tan4","limegreen"))
p14 <- ggplot(EDA_Distinct,aes(x=Occupation, fill=Age))+geom_bar()+facet_grid(Gender~Marital_Status)
d6; d7; p12; d8; p13; p14
head(train_set$Stay_In_Current_City_Years, 10); head(train_set$City_Category, 10)
d9 <- table(EDA_Distinct$City_Category, EDA_Distinct$Stay_In_Current_City_Years)
p15 <- ggplot(EDA_Distinct, aes(x=Stay_In_Current_City_Years, fill=City_Category)) + geom_bar( col="black") + ggtitle("") +  labs(x="Stay in Current City (Years)",y="No. of distinct people")
p16 <- ggplot(EDA_Distinct,aes(City_Category,fill=Age))+geom_bar()
p17 <- ggplot(EDA_Distinct,aes(x=Age,fill=Stay_In_Current_City_Years))+geom_bar()+facet_grid(City_Category~ Stay_In_Current_City_Years)
p18 <- ggplot(EDA_Distinct,aes(x=Age,fill=Marital_Status))+geom_bar()+facet_grid(Gender~City_Category) + scale_fill_manual(values=c("tan4","limegreen"))
d9; p15; p16; p17; p18
head(as.factor(train_set$Product_Category_1))
head(as.factor(train_set$Product_Category_2))
head(as.factor(train_set$Product_Category_3))
train_set$Product_Category_1 <- as.factor(train_set$Product_Category_1)
train_set$Product_Category_2 <- as.factor(train_set$Product_Category_2)
train_set$Product_Category_3 <- as.factor(train_set$Product_Category_3)
train_set$Product_Category_2 <- factor(train_set$Product_Category_2, levels=c(levels(train_set$Product_Category_2), "0"))
train_set[is.na(train_set$Product_Category_2), "Product_Category_2"] <-"0"
train_set$Product_Category_3 <- factor(train_set$Product_Category_3, levels=c(levels(train_set$Product_Category_3), "0"))
train_set[is.na(train_set$Product_Category_3), "Product_Category_3"] <-"0"
train_set$Cat_1 <- as.factor(ifelse((train_set$Product_Category_1=='1' | train_set$Product_Category_2=='1' | train_set$Product_Category_3=='1'), 1,0))
for(i in 2:20)
{
assign(paste("Cat_", as.character(i), sep=""),as.factor(ifelse((train_set$Product_Category_1==i | train_set$Product_Category_2==i | train_set$Product_Category_3==i), 1,0)))
}
train_set <- cbind(train_set, Cat_2, Cat_3, Cat_4, Cat_5, Cat_6, Cat_7, Cat_8, Cat_9, Cat_10, Cat_11, Cat_12, Cat_13, Cat_14, Cat_15, Cat_16, Cat_17, Cat_18, Cat_19, Cat_20)
to_drop <- c("Product_Category_1", "Product_Category_2", "Product_Category_3")
train_set <- train_set[,!names(train_set)%in% to_drop]
rm(Cat_2, Cat_3, Cat_4, Cat_5, Cat_6, Cat_7, Cat_8, Cat_9, Cat_10, Cat_11, Cat_12, Cat_13, Cat_14, Cat_15, Cat_16, Cat_17, Cat_18, Cat_19, Cat_20)
dim(train_set)
as.matrix(sapply(train_set, function(x) class(x)))
test_set$Product_Category_1 <- as.factor(test_set$Product_Category_1)
test_set$Product_Category_2 <- as.factor(test_set$Product_Category_2)
test_set$Product_Category_3 <- as.factor(test_set$Product_Category_3)
test_set$Product_Category_2 <- factor(test_set$Product_Category_2, levels=c(levels(test_set$Product_Category_2), "0"))
test_set[is.na(test_set$Product_Category_2), "Product_Category_2"] <-"0"
test_set$Product_Category_3 <- factor(test_set$Product_Category_3, levels=c(levels(test_set$Product_Category_3), "0"))
test_set[is.na(test_set$Product_Category_3), "Product_Category_3"] <-"0"
for(i in 1:20)
{
assign(paste("Cat_", as.character(i), sep=""),as.factor(ifelse((test_set$Product_Category_1==i | test_set$Product_Category_2==i | test_set$Product_Category_3==i), 1,0)))
}
test_set <- cbind(test_set, Cat_1, Cat_2, Cat_3, Cat_4, Cat_5, Cat_6, Cat_7, Cat_8, Cat_9, Cat_10, Cat_11, Cat_12, Cat_13, Cat_14, Cat_15, Cat_16, Cat_17, Cat_18, Cat_19, Cat_20)
to_drop <- c("Product_Category_1", "Product_Category_2", "Product_Category_3")
test_set <- test_set[,!names(test_set)%in% to_drop]
rm(Cat_1, Cat_2, Cat_3, Cat_4, Cat_5, Cat_6, Cat_7, Cat_8, Cat_9, Cat_10, Cat_11, Cat_12, Cat_13, Cat_14, Cat_15, Cat_16, Cat_17, Cat_18, Cat_19, Cat_20)
dim(test_set)
as.matrix(sapply(test_set, function(x) class(x)))
str(train_set); str(test_set)
sapply(train_set, function(x) sum(is.na(x))); sapply(test_set, function(x) sum(is.na(x)))
head(train_set[order(train_set$Product_ID),])
